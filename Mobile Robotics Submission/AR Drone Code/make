#!/bin/bash

#AR_CV_Path="/home/hassan/OpenCV_ARM/install"
AR_CV_Path="/home/hassan/ARM_Install"

fName=$1

#~ Identify File Name
if [ -f $fName".cpp" ]
   then srcFile=$1".cpp"
elif [ -f $fName".c" ]
   then srcFile=$1".c"
   else echo "File Not Found"
   exit
fi

#~ Object File Names
AR_OB="AR_"$1
PC_OB="PC_"$1

#~ echo $srcFile
#~ echo $AR_OB
#~ echo $PC_OB

#~ Remove Old Complilations
#~ {
rm $AR_OB
rm $PC_OB
#~ remove file from AR_Drone
if [ $2 ]
   then ./telnet_delete $AR_OB | telnet
fi
#~ } &>/dev/null # Silencer


#~ Compile for PC
echo "*******__PC__**********"
#~ g++ $srcFile `pkg-config --cflags opencv` -o `basename $i .cpp` $i `pkg-config --libs opencv` -o $PC_OB -lboost_thread -lboost_filesystem -lboost_system
g++ -I/home/hassan/ARM_Files/boost_1_58_0 -L/home/hassan/ARM_Files/boost_1_58_0/libs -I/usr/local/include/opencv -I/usr/local/include/opencv2 -L/usr/local/lib/ -g -o $PC_OB  $srcFile -lopencv_core -lopencv_imgproc -lopencv_highgui -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_stitching -lboost_thread -lboost_filesystem -lboost_system


echo "******__ARM__**********"
#~ Compile for ARDrone - Generic Compiler
#~ arm-linux-gnueabi-g++-4.7 -I$AR_CV_Path/include -I$AR_CV_Path/include/opencv -I$AR_CV_Path/include/opencv2 -L$AR_CV_Path/lib -g -o $AR_OB  $srcFile -lopencv_core -lopencv_imgproc -lopencv_highgui -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_stitching

#~ Compile for ARDrone
arm-none-linux-gnueabi-g++ -L/home/hassan/arm-2009q3/arm-none-linux-gnueabi/libc/lib -I$AR_CV_Path/include -I$AR_CV_Path/include/opencv -I$AR_CV_Path/include/opencv2/imgproc -I$AR_CV_Path/include/opencv2 -L$AR_CV_Path/lib -g -o $AR_OB $srcFile -lxvidcore -lx264 -lswscale -lavformat -lavutil -lswresample -lavcodec -lopencv_core -lopencv_imgproc -lopencv_highgui -lboost_thread -lboost_filesystem -lboost_system

#-lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_stitching


if [ -f $PC_OB ]
   then echo "PC Compilation Successful"
   else echo "PC FAILED!!!!"
fi

if [ -f $AR_OB ]
   then echo "AR_Drone Compilation Successful"
   if [ $2 ]
      then echo "Uploading File"
      wput -u $AR_OB ftp://192.168.1.1
      echo "chaning permissions"
      ./telnet_chmod $AR_OB | telnet
   fi
fi

#~ codesourcery-arm-2009q3.sh
#~ http://taghof.github.io/Navigation-for-Robots-with-WIFI-and-CV/blog/2012/01/13/Compiling-Code-For-The-ARDrone/
